<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        dtZwrQXmBCAfBbf2vP17dF0s7eOccurdLJ0GJlNwXVa71qXovljax9py6t0snQaqKLxeQFPjZXRdLO1j
        bTn1pqXTwMYouHeHCE/nsI+W3c5O+zennHr10mlg4xRcT+OtnRNwM7ovlvaxtpx61dJpoBsKr4t01PgQ
        XRdL+zinnPqsikfARim4v5b8Vhmtu5+d9s+3M2vLqU9aOg10RcH1nIAplXx+9iC6L5b2sbac+qSl00B3
        FNxnQ4Sn+xZdF0v7OKec+ujSaaBLCq6fulvrYnRfLO1jbTn10aXTQLcUXhfrrFFd12/dtI0+vfFaf896
        9MHsWgiepuyS5VMqHc0pp95cpgxYOwXXz9ev4RoA3T4vT9vmK/ljpcr82uiVe70+p5x6d09XBval4Lrq
        bq19H8G1CdquqU/98X9i+/0nUFtOvauHqwKTKbxeuVfjfXTthrbJF+9qKhS9i6670utzyql3U+4MmEzB
        vV7yW+VEdO+Ctudt2awqe56367U55dT3XToNdEfB9UWz2vp+96P7xmlb5my/jVb20evV5dSjK5CLwjv2
        bL/ddFPgU9syZ4mzXYiP2JVen1NOffFLp7FACq6fuFNr9ABaF23HnAuZk1Y46j215dQXv3QaC6Xw1j7p
        51l0baLP8erEpmsK6l+7unHShUy9b0459UUvncZCKbj3hwhP57UEs+YEqJ/v13+Iz/jBB48f3V19NV19
        aubw+3rB1Aegzimnvvil01ggBXfOT+mqWv96v7/t9ytP7gO06hFier8vBE6d1Vg1j0Hvry2nvvil01go
        h7dkeLLR++k/03t9a23qnAN/656LrpPo/a7q418Qe3Hdv6rPNPWZMydg0UunsVAK7tTZdD/4QJ10/q73
        1ZbfnjXhSP18V8Blzzybz83/nn11Xn3966J2TsDil05jgRRcP+2n9p76veg+Su+rPYj+E103TttSW059
        8UunsVAK79jP6N18jq570nvmLD22Lh4sou2YM9dg8UunsUAObslvldFza70+57Fk1k3pbW3L1Ocg/tD9
        0mlgVwpvbdifRtdd6fU536BdVd3V9tSuEPSpFHMCkI+C+2CI8HQ+v99zToBem7PGftK1hXXR9tQ+T8G6
        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
</value>
  </data>
  <metadata name="toastNotificationsManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>